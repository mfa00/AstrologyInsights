# Nginx configuration for Astrology Insights
# Place this file in /etc/nginx/sites-available/astrologyinsights
# Then create a symlink: sudo ln -s /etc/nginx/sites-available/astrologyinsights /etc/nginx/sites-enabled/

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;

# Upstream configuration for the Node.js application
upstream astrologyinsights_backend {
    server 127.0.0.1:5000;
    keepalive 32;
}

# HTTP to HTTPS redirect (for production with domain)
server {
    listen 80;
    server_name astrologyinsights.ge www.astrologyinsights.ge 10.70.10.71;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTP server for development/IP access
server {
    listen 80;
    server_name 10.70.10.71 localhost;
    
    # Security Headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Client settings
    client_max_body_size 10M;
    client_body_timeout 30s;
    client_header_timeout 30s;
    
    # Logging
    access_log /var/log/nginx/astrologyinsights_access.log;
    error_log /var/log/nginx/astrologyinsights_error.log warn;
    
    # Root directory (for static files in production)
    root /var/www/astrologyinsights/dist;
    index index.html;
    
    # API routes - proxy to Node.js backend
    location /api/ {
        # Rate limiting for API requests
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://astrologyinsights_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        add_header Access-Control-Allow-Credentials true always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Access-Control-Allow-Credentials true;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Try to serve static files, fallback to app
        try_files $uri @fallback;
    }
    
    # Images with moderate caching
    location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public";
        add_header Vary Accept-Encoding;
        
        try_files $uri @fallback;
    }
    
    # Main application routes - SPA fallback
    location / {
        # Rate limiting for general requests
        limit_req zone=general burst=20 nodelay;
        
        # Try to serve static files first, then fallback to SPA
        try_files $uri $uri/ @fallback;
        
        # Cache control for HTML
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Fallback to Node.js app for SPA routing and dynamic content
    location @fallback {
        proxy_pass http://astrologyinsights_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://astrologyinsights_backend/health;
        access_log off;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(package\.json|package-lock\.json|yarn\.lock|\.env|\.git) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Robots.txt
    location = /robots.txt {
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }
    
    # Sitemap
    location = /sitemap.xml {
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }
    
    # Favicon
    location = /favicon.ico {
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }
}

# Main HTTPS server block (for production with domain and SSL)
server {
    listen 443 ssl http2;
    server_name astrologyinsights.ge www.astrologyinsights.ge 10.70.10.71;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/astrologyinsights.ge/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/astrologyinsights.ge/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/astrologyinsights.ge/chain.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-src 'none';" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Client settings
    client_max_body_size 10M;
    client_body_timeout 30s;
    client_header_timeout 30s;
    
    # Logging
    access_log /var/log/nginx/astrologyinsights_access.log;
    error_log /var/log/nginx/astrologyinsights_error.log warn;
    
    # Root directory (for static files in production)
    root /var/www/astrologyinsights/dist;
    index index.html;
    
    # API routes - proxy to Node.js backend
    location /api/ {
        # Rate limiting for API requests
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://astrologyinsights_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://astrologyinsights.ge" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        add_header Access-Control-Allow-Credentials true always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://astrologyinsights.ge";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Access-Control-Allow-Credentials true;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Try to serve static files, fallback to app
        try_files $uri @fallback;
    }
    
    # Images with moderate caching
    location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public";
        add_header Vary Accept-Encoding;
        
        try_files $uri @fallback;
    }
    
    # Main application routes - SPA fallback
    location / {
        # Rate limiting for general requests
        limit_req zone=general burst=20 nodelay;
        
        # Try to serve static files first, then fallback to SPA
        try_files $uri $uri/ @fallback;
        
        # Cache control for HTML
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Fallback to Node.js app for SPA routing and dynamic content
    location @fallback {
        proxy_pass http://astrologyinsights_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://astrologyinsights_backend/health;
        access_log off;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(package\.json|package-lock\.json|yarn\.lock|\.env|\.git) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Robots.txt
    location = /robots.txt {
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }
    
    # Sitemap
    location = /sitemap.xml {
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }
    
    # Favicon
    location = /favicon.ico {
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }
}

# Additional server block for www redirect (optional)
server {
    listen 443 ssl http2;
    server_name www.astrologyinsights.ge;
    
    ssl_certificate /etc/letsencrypt/live/astrologyinsights.ge/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/astrologyinsights.ge/privkey.pem;
    
    return 301 https://astrologyinsights.ge$request_uri;
} 